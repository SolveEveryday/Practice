name: Auto Merge Pull Request

on:
  schedule:
    - cron: '0 0 * * *' # 매일 자정에 실행 (UTC 기준)
  workflow_dispatch:

jobs:
  auto_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set git user info
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          
      - name: Merge Pull Request
        run: |
          git fetch origin
          pr_list=$(gh pr list -s open --json number,createdAt,author | jq --arg separator ',' -r '.[] | [.number, .createdAt, .author.login] | @csv' | sed 's/"//g')
          for pull_request in $pr_list; do
            pull_request_arr=(${pull_request//,/ })
            number=${pull_request_arr[0]}
            createdAt=${pull_request_arr[1]}
            author=${pull_request_arr[2]}
            now=$(date +%s)
            createdAt_iso=$(echo "$createdAt" | sed 's/Z$//' | tr 'T' ' ')
            createdAt_formatted=$(date -d "$createdAt_iso" +%FT%T%z)
            created=$(date -d "$createdAt_formatted" +%s)
            if [ $((now-created)) -ge $((2*24*60*60)) ]; then
              # 체크아웃된 브랜치에서 병합 가능 여부를 판단
              git checkout -b pr/$number origin/pull/$number/head
              if ! git merge --no-commit origin/main --allow-unrelated-histories; then # 병합 실패한 경우 코멘트 달기
                gh pr comment $number --body "Error merging the pull request: conflicts detected @${author}"
              else # 병합 성공한 경우 머지하고, 코멘트 달기
                gh pr merge $number --delete-branch --merge --allow-unrelated-histories
              fi
              git checkout main
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
